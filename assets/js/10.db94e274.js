(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{410:function(s,n,a){"use strict";a.r(n);var t=a(56),e=Object(t.a)({},(function(){var s=this,n=s.$createElement,a=s._self._c||n;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"gitlab-cicd"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#gitlab-cicd"}},[s._v("#")]),s._v(" gitlab cicd")]),s._v(" "),a("h2",{attrs:{id:"cicd介绍"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cicd介绍"}},[s._v("#")]),s._v(" CICD介绍")]),s._v(" "),a("p",[s._v("CICD指的持续集成（Continuous Integration）和持续交付（Continuous Delivery），简写为CICD，持续集成（CI）指的是开发人员向特性分支提交代码，执行构建和单元测试，通过测试后合并到主分支的过程，主要强调的分支代码的提交，构建及单元测试。持续交付（CD）指的在持续集成的基础上，将代码部署到测试服务器上，通过QA测试后再把代码部署到生产服务器的过程，主要强调的是代码的部署。")]),s._v(" "),a("h2",{attrs:{id:"gitlab-cicd介绍"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#gitlab-cicd介绍"}},[s._v("#")]),s._v(" gitlab cicd介绍")]),s._v(" "),a("p",[s._v("在gitlab上使用cicd需要注册一个runner，这个runner一般是部署在一台单独的机器上用来执行自动化脚本，gitlab提供了一些免费的runner，不过使用这些runner需要绑定信用卡。我们也可以自己搭建runner")]),s._v(" "),a("h2",{attrs:{id:"runner安装"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#runner安装"}},[s._v("#")]),s._v(" runner安装")]),s._v(" "),a("p",[s._v("Ubuntu")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("apt-get")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" gitlab-runner\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("centos8")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("dnf "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" gitlab-runner\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("centos7")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("yum "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" gitlab-runner\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h2",{attrs:{id:"runner注册"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#runner注册"}},[s._v("#")]),s._v(" runner注册")]),s._v(" "),a("p",[s._v("启动runner")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("gitlab-runner start\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("执行 $REGISTRATION_TOKEN是在gitlab仓库settings runner Specific runners下面获取")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("sudo gitlab-runner register --url https://gitlab.com/ --registration-token $REGISTRATION_TOKEN\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("执行上面的注册runner命令后会出现一些QA式的问答，填写完毕即可")]),s._v(" "),a("h2",{attrs:{id:"runner配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#runner配置"}},[s._v("#")]),s._v(" runner配置")]),s._v(" "),a("p",[s._v("在项目根目录添加一个.gitlab.yml文件, yml文件的书写格式请自行百度"),a("br"),s._v("\n配置文件内容")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('stages: // cicd的阶段，每个阶段会执行对应的job\n - build\n - deploy\n - notify\n\nbuild-job: // job\n stage: build\n tags: // 与runner注册时对应\n  - push\n script: // job里需要执行的脚本\n  - echo `pwd`\n  - npm install --registry=https://registry.npm.taobao.org \n  - npm run build\n cache: // 缓存文件\n  paths:\n   - node_modules/\n   - dist/\n artifacts:\n   paths:\n    - dist/\n only: // 限制哪些文件可以触发cicd\n   - main\ndeploy-job:\n stage: deploy \n tags:\n  - deploay\n before_script: // 预先执行的一些脚本\n   - mkdir -p ~/.ssh\n   - chmod 700 ~/.ssh\n   - eval $(ssh-agent -s)\n   - echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa\n   - chmod 600 ~/.ssh/id_rsa\n   - ssh-add ~/.ssh/id_rsa\n script:\n  - pwd\n  - ls -l\n  - mv dist vue-ci \n  - scp  -r vue-ci root@ip:/root/dist\n only:\n   - main\nnotify-error-job: 部署阶段的job\n stage: notify\n tags:\n  - bke\n script:\n  - curl -H \'Content-Type:application/json\' -X POST -d "{\\"emailSubject\\":\\"oa系统后端部署通知\\",\\"emailContent\\":\\"<div>项目部署结果：<span style=\'color:red\'>失败</span></div>项目名称：$CI_PROJECT_NAME\\n</br>提交人：$CI_COMMIT_AUTHOR\\"}" http://ip/email/note\n only:\n  - main\n when: on_failure // 当前面一个job失败时执行这个job\nnotify-success-job:\n stage: notify\n tags:\n  - bke\n script:\n  - curl -H \'Content-Type:application/json\' -X POST -d "{\\"emailSubject\\":\\"oa系统后端部署通知\\",\\"emailContent\\":\\"<div>项目部署结果：<span style=\'color:green\'>成功</span></div>项目名称：$CI_PROJECT_NAME\\n</br>提交人：$CI_COMMIT_AUTHOR\\"}" http://ip/email\n only:\n  - main\n when: on_success  // 当前面一个job成功时执行这个job\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br"),a("span",{staticClass:"line-number"},[s._v("33")]),a("br"),a("span",{staticClass:"line-number"},[s._v("34")]),a("br"),a("span",{staticClass:"line-number"},[s._v("35")]),a("br"),a("span",{staticClass:"line-number"},[s._v("36")]),a("br"),a("span",{staticClass:"line-number"},[s._v("37")]),a("br"),a("span",{staticClass:"line-number"},[s._v("38")]),a("br"),a("span",{staticClass:"line-number"},[s._v("39")]),a("br"),a("span",{staticClass:"line-number"},[s._v("40")]),a("br"),a("span",{staticClass:"line-number"},[s._v("41")]),a("br"),a("span",{staticClass:"line-number"},[s._v("42")]),a("br"),a("span",{staticClass:"line-number"},[s._v("43")]),a("br"),a("span",{staticClass:"line-number"},[s._v("44")]),a("br"),a("span",{staticClass:"line-number"},[s._v("45")]),a("br"),a("span",{staticClass:"line-number"},[s._v("46")]),a("br"),a("span",{staticClass:"line-number"},[s._v("47")]),a("br"),a("span",{staticClass:"line-number"},[s._v("48")]),a("br"),a("span",{staticClass:"line-number"},[s._v("49")]),a("br"),a("span",{staticClass:"line-number"},[s._v("50")]),a("br"),a("span",{staticClass:"line-number"},[s._v("51")]),a("br"),a("span",{staticClass:"line-number"},[s._v("52")]),a("br"),a("span",{staticClass:"line-number"},[s._v("53")]),a("br"),a("span",{staticClass:"line-number"},[s._v("54")]),a("br"),a("span",{staticClass:"line-number"},[s._v("55")]),a("br"),a("span",{staticClass:"line-number"},[s._v("56")]),a("br"),a("span",{staticClass:"line-number"},[s._v("57")]),a("br"),a("span",{staticClass:"line-number"},[s._v("58")]),a("br")])]),a("p",[s._v("这边主要是分了三个阶段（stage），一个构建打包，一个部署，一个通知是否部署成功。每一个阶段有一些job，在job里配置了一些脚本（script），每个阶段可以有多个job，gitlab-runner的最小执行单位是按照job来执行，按照书写顺序执行。"),a("br"),s._v("\n通知阶段的一些任务用到了gitlab的一些变量，如CI_PROJECT_NAME CI_COMMIT_AUTHOR，具体请"),a("a",{attrs:{href:"https://docs.gitlab.com/ee/ci/variables/predefined_variables.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("参考"),a("OutboundLink")],1)]),s._v(" "),a("h2",{attrs:{id:"踩坑记录"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#踩坑记录"}},[s._v("#")]),s._v(" 踩坑记录")]),s._v(" "),a("p",[s._v("runner服务器和代码部署的服务器是两台不同的服务器，由于我选择的脚本执行方式是ssh方式，需要在runner服务器上配置ssh免密登录，配置流程是把runner服务器上的ssh公钥复制一份放到代码部署服务器的ssh目录下的authorized_keys文件中")])])}),[],!1,null,null,null);n.default=e.exports}}]);